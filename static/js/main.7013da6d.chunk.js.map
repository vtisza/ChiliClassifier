{"version":3,"sources":["components/utils.js","chili-resnet18.onnx","components/classes.js","components/Scorecard.js","components/Predictions.js","components/Snackbars.js","components/DropzoneIcon.js","components/DropImageCard.js","components/Classifier.js","components/App.js","serviceWorker.js","index.js"],"names":["getBreed","className","split","map","p","charAt","toUpperCase","slice","join","getBreedImg","breed","process","makeSession","InferenceSession","backendHint","warmupModel","session","a","size","dims","reduce","b","warmupTensor","Tensor","Float32Array","i","data","Math","random","run","loadModel","resnet","input","setOutputMap","width","height","preprocess","inputTensor","outputMap","runModel","setTimeout","_runModel","dataTensor","ndarray","dataProcessedTensor","ops","assign","pick","divseq","subseq","wait","ms","Promise","res","rej","global","imgConfig","maxWidth","maxHeight","cover","crop","canvas","crossOrigin","orientation","getImage","url","loadImage","img","fetchImage","setData","current","type","Error","ctx","getContext","drawImage","getImageData","module","exports","useStyles","makeStyles","card","item","paddingTop","Scorecard","items","classes","Card","List","dense","avatar","name","percentage","id","ListItem","key","ListItemAvatar","Avatar","alt","src","ListItemText","primary","ListItemSecondaryAction","Typography","getTopK","acts","k","topK","Array","from","act","sort","reverse","denominator","y","exp","_","prob","Predictions","output","toFixed","theme","box","padding","margin","content","boxSizing","info","backgroundColor","palette","main","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","InfoSnackbar","Box","SnackbarContent","clsx","LoadingSnackbar","CircularProgress","color","fileLoaded","isDragActive","position","justifyContent","marginBottom","zIndex","DropImageCard","setFile","canvasRef","onDrop","useCallback","acceptedFiles","length","console","log","file","startsWith","useDropzone","getRootProps","getInputProps","ref","DropzoneIcon","root","flexGrow","Classifier","useState","loaded","setLoaded","isLoading","setIsLoading","startLoadModel","useRef","useEffect","outputData","values","next","value","Grid","container","Button","variant","onClick","marginTop","menuButton","title","heading","typography","pxToRem","fontWeight","fontWeightRegular","table","footer","button","App","AppBar","Toolbar","Container","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","breeds","Link","to","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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,IAA0B,6C,gJCA5B,GAAC,oBACf,qBACA,kBACA,gBACA,cACA,cACA,eACA,gBACA,aACA,eACA,YACA,gBACA,YACA,gBACA,gBACA,iBACA,eACA,gBACA,gBACA,gBACA,oBACA,cACA,yBACA,uBACA,qBACA,qBACA,yBACA,qBACA,sBACA,cACA,0BACA,0BACA,eACA,qBACA,gBACA,2BACA,yBACA,gBACA,kBACA,kBACA,iBACA,wBACA,cACA,qBACA,iBACA,iBACA,eACA,mBACA,iBACA,kBACA,qBACA,uBACA,iBACA,mBACA,eACA,uBACA,cACA,wBACA,kBACA,mBACA,yBACA,iBACA,qBACA,cACA,gBACA,eACA,cACA,kBACA,mBACA,eACA,kBACA,eACA,oBACA,mBACA,oBACA,uBACA,uBACA,kBACA,0BACA,mBACA,uBACA,iBACA,eACA,iBACA,uBACA,oBACA,oBACA,yBACA,mBACA,iBACA,kBACA,gBACA,iBACA,kBACA,gBACA,cACA,aACA,gBACA,mBACA,iBACA,gBACA,iBACA,qBACA,kBACA,WACA,eACA,gBACA,0BACA,eACA,iBACA,kBACA,iBACA,sBACA,0BACA,uBACA,8BACA,sBACA,0BACA,mBACA,gBACA,sBACA,qBACA,gBACA,iBACA,yBACA,qBACA,uBACA,iBACA,kBACA,gBACA,eACA,qBACA,iBACA,yBACA,cACA,mBACA,wBACA,2BACA,mBACA,4BACA,8BACA,oB,gFClIKC,EAAYC,YAAW,CACzBC,KAAM,CACF/C,MAAO,IACPC,OAAQ,KAEZ+C,KAAM,CACFC,WAAY,MAIL,SAASC,EAAT,GAA6B,IAATC,EAAQ,EAARA,MACzBC,EAAUP,IAChB,OAAO,kBAACQ,EAAA,EAAD,CAAMtF,UAAWqF,EAAQL,MAAM,kBAACO,EAAA,EAAD,CAAMC,OAAK,GAC5CJ,EAAMlF,KAAI,YAAiC,IAA/BuF,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WACjBC,EAAE,UAAMF,EAAN,YAAcC,GACtB,OAAO,kBAACE,EAAA,EAAD,CAAUC,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","file":"static/js/main.7013da6d.chunk.js","sourcesContent":["import loadImage from 'blueimp-load-image';\r\nimport {Tensor, InferenceSession} from 'onnxjs';\r\nimport ndarray from 'ndarray';\r\nimport ops from 'ndarray-ops';\r\nimport resnet from '../chili-resnet18.onnx';\r\n\r\nexport const getBreed = className => className.split('_').map(p => {\r\n    return p.charAt(0).toUpperCase() + p.slice(1)\r\n}).join(' ')\r\n\r\nexport const getBreedImg = className => {\r\n    const breed = className.split('_').map(p => {\r\n        return p.charAt(0) + p.slice(1)\r\n    }).join('_')\r\n    return `${process.env.PUBLIC_URL}/images/${breed}.jpg`\r\n}\r\n\r\nexport const makeSession = (() => {\r\n    let _session = null;\r\n    return () => {\r\n        if (_session !== null) { return _session; }\r\n        return new InferenceSession({backendHint: 'webgl'});\r\n    }\r\n})()\r\n\r\nasync function warmupModel (session) {\r\n    const dims = [1, 3, 224, 224];\r\n    const size = dims.reduce((a, b) => a * b);\r\n    const warmupTensor = new Tensor(new Float32Array(size), 'float32', dims);\r\n    for (let i = 0; i < size; i++) {\r\n        warmupTensor.data[i] = Math.random() * 2.0 - 1.0; // random value [-1.0, 1.0)\r\n    }\r\n    await session.run([warmupTensor]);\r\n}\r\n\r\nexport async function loadModel (session) {\r\n    await session.loadModel(resnet);\r\n    await warmupModel(session);\r\n}\r\n\r\nasync function _runModel (session, input, setOutputMap) {\r\n    const {width, height} = input;\r\n    const data = preprocess(input);\r\n    const inputTensor = new Tensor(data, 'float32', [1, 3, width, height]);\r\n    // await wait(0);\r\n    const outputMap = await session.run([inputTensor]);\r\n    setOutputMap(outputMap);\r\n}\r\n\r\nexport function runModel(session, input, setOutputMap) {\r\n    setTimeout(() => _runModel(session, input, setOutputMap), 10);\r\n}\r\n\r\n// borrowed from onnx.js example: https://github.com/microsoft/onnxjs/blob/4085b7e61804d093e36af6a456d8c14c329f0a0a/examples/browser/resnet50/index.js#L29\r\nconst preprocess = input => {\r\n    const {data, width, height} = input\r\n\r\n    // data processing\r\n    const dataTensor = ndarray(new Float32Array(data), [width, height, 4]);\r\n    const dataProcessedTensor = ndarray(new Float32Array(width * height * 3), [1, 3, width, height]);\r\n    ops.assign(dataProcessedTensor.pick(0, 0, null, null), dataTensor.pick(null, null, 0));\r\n    ops.assign(dataProcessedTensor.pick(0, 1, null, null), dataTensor.pick(null, null, 1));\r\n    ops.assign(dataProcessedTensor.pick(0, 2, null, null), dataTensor.pick(null, null, 2));\r\n    ops.divseq(dataProcessedTensor, 255);\r\n    ops.subseq(dataProcessedTensor.pick(0, 0, null, null), 0.485);\r\n    ops.subseq(dataProcessedTensor.pick(0, 1, null, null), 0.456);\r\n    ops.subseq(dataProcessedTensor.pick(0, 2, null, null), 0.406);\r\n    ops.divseq(dataProcessedTensor.pick(0, 0, null, null), 0.229);\r\n    ops.divseq(dataProcessedTensor.pick(0, 1, null, null), 0.224);\r\n    ops.divseq(dataProcessedTensor.pick(0, 2, null, null), 0.225);\r\n\r\n    return dataProcessedTensor.data;\r\n}\r\n\r\nconst wait = ms => new Promise((res, rej) => {\r\n    global.setTimeout(() => res(), ms)\r\n});\r\n\r\nconst imgConfig = {\r\n    maxWidth: 224,\r\n    maxHeight: 224,\r\n    cover: true,\r\n    crop: true,\r\n    canvas: true,\r\n    crossOrigin: 'Anonymous',\r\n    orientation: true,\r\n};\r\n  \r\nconst getImage = url => new Promise((res, rej) => {\r\n    loadImage(url, img => res(img), imgConfig)\r\n});\r\n\r\nexport const fetchImage = async (url, canvas, setData) => {\r\n    if (!canvas || !canvas.current) return;\r\n    const img = await getImage(url);\r\n    if (img.type === \"error\") throw new Error(\"could not load image\");\r\n    const ctx = canvas.current.getContext('2d');\r\n    ctx.drawImage(img, 0, 0);\r\n    await wait(1);\r\n    const data = ctx.getImageData(0, 0, canvas.current.width, canvas.current.height);\r\n    setData(data);\r\n};","module.exports = __webpack_public_path__ + \"static/media/chili-resnet18.b9c461d0.onnx\";","export default ['7_Pot_Barrackpore',\r\n '7_Pot_Brain_Strain',\r\n '7_Pot_Bubblegum',\r\n '7_Pot_Douglah',\r\n '7_Pot_Jonah',\r\n '7_Pot_Primo',\r\n 'Aji_Amarillo',\r\n 'Aji_Charapita',\r\n 'Aji_Chombo',\r\n 'Aji_Colorado',\r\n 'Aji_Dulce',\r\n 'Aji_Omnicolor',\r\n 'Aji_Panca',\r\n 'Aji_Pineapple',\r\n 'Aleppo_Pepper',\r\n 'Anaheim_Pepper',\r\n 'Ancho_Pepper',\r\n 'Apache_Pepper',\r\n 'Aurora_Pepper',\r\n 'Banana_Pepper',\r\n 'Beaver_Dam_Pepper',\r\n 'Bell_Pepper',\r\n 'Bhut_Jolokia_Chocolate',\r\n 'Bishops_Crown_Pepper',\r\n 'Black_Cobra_Pepper',\r\n 'Black_Cuban_Pepper',\r\n 'Black_Hungarian_Pepper',\r\n 'Black_Pearl_Pepper',\r\n 'Black_Prince_Pepper',\r\n 'Bode_Pepper',\r\n 'Bolivian_Rainbow_Pepper',\r\n 'Bulgarian_Carrot_Pepper',\r\n 'Byadgi_Chili',\r\n 'Cajun_Belle_Pepper',\r\n 'Calico_pepper',\r\n 'California_Wonder_Pepper',\r\n 'Caribbean_Red_Habanero',\r\n 'Carmen_Pepper',\r\n 'Carolina_Reaper',\r\n 'Cascabel_Pepper',\r\n 'Cayenne_Pepper',\r\n 'Charleston_Hot_Pepper',\r\n 'Cheiro_Roxa',\r\n 'Cherry_Bomb_Pepper',\r\n 'Chilaca_Pepper',\r\n 'Chile_De_Arbol',\r\n 'Chilly_Chili',\r\n 'Chiltepin_Pepper',\r\n 'Chimayo_Pepper',\r\n 'Chipotle_Pepper',\r\n 'Chocolate_Habanero',\r\n 'Count_Dracula_Pepper',\r\n 'Cowhorn_Pepper',\r\n 'Cubanelle_Pepper',\r\n 'Datil_Pepper',\r\n 'Devils_Tongue_Pepper',\r\n 'Dorset_Naga',\r\n 'Dragons_Breath_Pepper',\r\n 'Dundicut_Pepper',\r\n 'Espelette_Pepper',\r\n 'Explosive_Ember_Pepper',\r\n 'Fatalii_Pepper',\r\n 'Filius_Blue_Pepper',\r\n 'Fish_Pepper',\r\n 'Fresno_Pepper',\r\n 'Ghost_Pepper',\r\n 'Goat_Pepper',\r\n 'Guajillo_Pepper',\r\n 'Guindilla_Pepper',\r\n 'Gypsy_Pepper',\r\n 'Habanero_Pepper',\r\n 'Hatch_Pepper',\r\n 'Hinkelhatz_Pepper',\r\n 'Holy_Mole_Pepper',\r\n 'Hot_Paper_Lantern',\r\n 'Hungarian_Wax_Pepper',\r\n 'Inca_Red_Drop_Pepper',\r\n 'Infinity_Pepper',\r\n 'Italian_Long_Hot_Pepper',\r\n 'Jalafuego_Pepper',\r\n 'Jalape�o_Pepper',\r\n 'Japones_Pepper',\r\n 'Jwala_Pepper',\r\n 'Kashmiri_Chili',\r\n 'Komodo_Dragon_Pepper',\r\n 'Lemon_Drop_Pepper',\r\n 'Little_Elf_Pepper',\r\n 'Madame_Jeanette_Pepper',\r\n 'Malagueta_Pepper',\r\n 'Manzano_Pepper',\r\n 'Mariachi_Pepper',\r\n 'Medusa_Pepper',\r\n 'Melrose_Pepper',\r\n 'Mexibell_pepper',\r\n 'Mulato_Pepper',\r\n 'Naga_Morich',\r\n 'Naga_Viper',\r\n 'NuMex_Big_Jim',\r\n 'NuMex_Centennial',\r\n 'NuMex_Twilight',\r\n 'Padron_Pepper',\r\n 'Pasilla_Pepper',\r\n 'Peperone_di_Senise',\r\n 'Peppadew_Pepper',\r\n 'Pepper_X',\r\n 'Pepperoncini',\r\n 'Pequin_Pepper',\r\n 'Peruvian_White_Habanero',\r\n 'Peter_Pepper',\r\n 'Pimento_Pepper',\r\n 'Piquillo_Pepper',\r\n 'Poblano_Pepper',\r\n 'Prairie_Fire_Pepper',\r\n 'Pretty_in_Purple_pepper',\r\n 'Purple_Beauty_Pepper',\r\n 'Purple_Jalape�o_Pepper',\r\n 'Red_Savina_Habanero',\r\n 'Roatan_Pumpkin_Habanero',\r\n 'Rocotillo_Pepper',\r\n 'Rocoto_Pepper',\r\n 'Rooster_Spur_Pepper',\r\n 'Royal_Black_Pepper',\r\n 'Sandia_Pepper',\r\n 'Sangria_Pepper',\r\n 'Santa_Fe_Grande_Pepper',\r\n 'Satans_Kiss_Pepper',\r\n 'Scotch_Bonnet_Pepper',\r\n 'Serrano_Pepper',\r\n 'Shishito_Pepper',\r\n 'Siling_Labuyo',\r\n 'Sport_Pepper',\r\n 'Super_Chili_Pepper',\r\n 'Tabasco_Pepper',\r\n 'Tangerine_Dream_Pepper',\r\n 'Thai_Pepper',\r\n 'Tien_Tsin_Pepper',\r\n 'Trinidad_7_Pot_Pepper',\r\n 'Trinidad_Moruga_Scorpion',\r\n 'Trinidad_Perfume',\r\n 'Trinidad_Scorpion_Butch-T',\r\n 'Trinidad_Scorpion_Chocolate',\r\n 'Wiri_Wiri_Pepper'];","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        width: 299,\r\n        height: 299,\r\n    },\r\n    item: {\r\n        paddingTop: 10,\r\n    },\r\n});\r\n\r\nexport default function Scorecard({items}) {\r\n    const classes = useStyles();\r\n    return <Card className={classes.card}><List dense>\r\n        {items.map(({avatar, name, percentage}) => {\r\n            const id = `${name}-${percentage}`\r\n            return <ListItem key={id} className={classes.item}>\r\n                <ListItemAvatar>\r\n                    <Avatar\r\n                        alt={`image of ${name}`}\r\n                        src={avatar}\r\n                    />\r\n                </ListItemAvatar>\r\n                <ListItemText id={id} primary={name} />\r\n                <ListItemSecondaryAction>\r\n                    <Typography>{percentage}%</Typography>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        })}\r\n    </List></Card>;\r\n};","import React from 'react';\r\nimport classes from './classes'\r\nimport Scorecard from './Scorecard';\r\nimport {getBreedImg, getBreed} from './utils';\r\n\r\nconst getTopK = (acts, k) => {\r\n    const topK = Array.from(acts)\r\n        .map((act, i) => [act, i])\r\n        .sort((a, b) => {\r\n            if (a[0] < b[0]) return -1;\r\n            if (a[0] > b[0]) return 1;\r\n            return 0;\r\n        })\r\n        .reverse()\r\n        .slice(0, k)\r\n\r\n    // denominator of softmax function\r\n    const denominator = acts.map(y => Math.exp(y)).reduce((a,b) => a+b)\r\n    return topK.map(([act, i], _, acts) => ({\r\n        breed: classes[i],\r\n        act,\r\n        prob: Math.exp(act) / denominator,\r\n    }));\r\n}\r\n\r\nexport default function Predictions({output}) {\r\n    if (!output) return null;\r\n    const items = getTopK(output, 5).map(({breed, prob}) => ({\r\n        name: getBreed(breed),\r\n        percentage: (prob * 100).toFixed(2),\r\n        avatar: getBreedImg(breed),\r\n    }));\r\n    return <Scorecard items={items} />;\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    box: {\r\n        width: 299,\r\n        padding: 0,\r\n        margin: 0,\r\n    },\r\n    content: {\r\n        boxSizing: 'border-box',\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nexport function InfoSnackbar({message}) {\r\n    const classes = useStyles();\r\n    return <Box className={classes.box}>\r\n        <SnackbarContent className={clsx(classes.info, classes.content)} message={\r\n            <span className={classes.message}>\r\n                <InfoIcon className={clsx(classes.icon, classes.iconVariant)} />\r\n                {message}\r\n            </span>\r\n        } />\r\n    </Box>;\r\n}\r\n\r\nexport function LoadingSnackbar({message}) {\r\n    const classes = useStyles();\r\n    return <Box className={classes.box}>\r\n        <SnackbarContent className={classes.content} message={\r\n            <span className={classes.message}>\r\n                <CircularProgress size={20} className={classes.iconVariant} />\r\n                {message}\r\n            </span>\r\n        } />\r\n    </Box>;\r\n}","import React from 'react';\r\nimport InsertPhotoIcon from '@material-ui/icons/InsertPhoto';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    icon: {\r\n        width: '50%',\r\n        height: '50%',\r\n        color: 'grey',\r\n    },\r\n});\r\n\r\nexport default ({fileLoaded, isDragActive}) => {\r\n    const classes = useStyles();\r\n    if (fileLoaded) { return null; }\r\n    if (isDragActive) { return <CheckCircleIcon className={classes.icon} />; }\r\n    return <InsertPhotoIcon className={classes.icon} />;\r\n}","import React, {useCallback} from 'react';\r\nimport DropzoneIcon from './DropzoneIcon'\r\nimport {useDropzone} from 'react-dropzone';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        width: 224,\r\n        height: 224,\r\n        position: 'relative',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginBottom: 10,\r\n    },\r\n    canvas: {\r\n        width: 224,\r\n        height: 224,\r\n        zIndex: 0,\r\n        position: 'absolute',\r\n    },\r\n    input: {\r\n        zIndex: 9999,\r\n        position: 'absolute',\r\n    },\r\n});\r\n\r\nexport default function DropImageCard({setFile, canvasRef, fileLoaded}) {\r\n    const classes = useStyles();\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        if (acceptedFiles.length > 1) {\r\n            return console.log('can only handle one file at a time');\r\n        }\r\n        if (acceptedFiles.length === 0) return;\r\n        const file = acceptedFiles[0]\r\n        if (!file.type.startsWith('image')) {\r\n            return console.log('file must be an image')\r\n        }\r\n        setFile(file)\r\n    }, [setFile])\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n    return <Card {...getRootProps()} className={classes.card}>\r\n        <canvas className={classes.canvas} ref={canvasRef} width={224} height={224} />\r\n        <input alt=\"Image Dropzone\" type=\"image\" className={classes.input} {...getInputProps()} />\r\n        <DropzoneIcon fileLoaded={fileLoaded} isDragActive={isDragActive} />\r\n    </Card>\r\n}","import React, {useRef, useEffect, useState} from 'react';\r\nimport Predictions from './Predictions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {InfoSnackbar, LoadingSnackbar } from './Snackbars'\r\nimport DropImageCard from './DropImageCard'\r\nimport { fetchImage, makeSession, loadModel, runModel } from './utils'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst session = makeSession();\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n  \r\n\r\nexport default function Classifier() {\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const startLoadModel = async () => {\r\n        if (isLoading || loaded) { return; }\r\n        setIsLoading(true);\r\n        await loadModel(session);\r\n        setLoaded(true);\r\n        setIsLoading(false);\r\n    }\r\n    \r\n    const [file, setFile] = useState(null)    \r\n    const canvas = useRef(null)\r\n    const [data, setData] = useState(null)\r\n    useEffect(() => {\r\n        if (file) fetchImage(file, canvas, setData);\r\n    }, [file])\r\n\r\n    const [outputMap, setOutputMap] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!loaded || !data) return;\r\n        runModel(session, data, setOutputMap);\r\n    }, [loaded, data]); // runs when loaded or data changes    \r\n    const outputData = outputMap && outputMap.values().next().value.data;\r\n    \r\n    const classes = useStyles();\r\n    return <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n            <Grid item>\r\n                <DropImageCard setFile={setFile} canvasRef={canvas} fileLoaded={!!file} />\r\n                { !loaded && !isLoading && <Button variant=\"contained\" onClick={startLoadModel}>Load model (48 MB)</Button>}\r\n                { !loaded && isLoading && <LoadingSnackbar message=\"Loading model...\" /> }\r\n                { loaded && data && !outputMap && <LoadingSnackbar message=\"Running model...\" /> }\r\n                { loaded && !file && <InfoSnackbar message=\"Add or take a picture...\" /> }\r\n                { !!file && !data && <LoadingSnackbar message=\"Loading image...\" /> }\r\n            </Grid>\r\n            <Grid item>\r\n                <Predictions output={outputData} />\r\n            </Grid>\r\n        </Grid>\r\n    </div>\r\n}","import React from 'react';\r\nimport Classifier from './Classifier'\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport breeds from './classes'\r\nimport {getBreed} from './utils'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    content: {\r\n        marginTop: 20,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    table: {\r\n        width: '100%',\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 'auto',\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction App() {\r\n    const classes = useStyles();\r\n    return <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Chili Pepper Classifier\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n        <Container className={classes.content}>\r\n            <Classifier />\r\n        </Container>\r\n        <Container className={classes.content}>\r\n            <ExpansionPanel>\r\n                <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                >\r\n                <Typography className={classes.heading}>How do I use this?</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                <Typography variant=\"body2\">\r\n                    Tab on the image icon to take a photo of a chili and drag and drop an image file of a chili on the image icon to classify the chili's type. Note {breeds.length} different chili types are supported. If your image shows a different type, the prediction will be pretty meaningless.\r\n                </Typography>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <ExpansionPanel>\r\n                <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel2a-content\"\r\n                id=\"panel2a-header\"\r\n                >\r\n                <Typography className={classes.heading}>What chili types does the classifier know?</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                <Typography variant=\"body2\">\r\n                    Dataset for this classifier was collected from  web search. Training dataset contains {breeds.length} different types.\r\n                    Here is a list of all of them: {breeds.map(breed => getBreed(breed)).join(', ')}. \r\n                </Typography>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <ExpansionPanel>\r\n                <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel3a-content\"\r\n                id=\"panel3a-header\"\r\n                >\r\n                <Typography className={classes.heading}>What is this good for?</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                <Typography variant=\"body2\">\r\n                    This app was meant to support fellow chili lovers to determine their chili type. It is also a showcase how machine learning can solve complex vision tasks.\r\n                </Typography>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <ExpansionPanel>\r\n                <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel3a-content\"\r\n                id=\"panel3a-header\"\r\n                >\r\n                <Typography className={classes.heading}>What happens to my data?</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                <Typography variant=\"body2\">\r\n                    No image that you take with or add to this application will be uploaded or stored on my or anyone's servers by this application / website. In fact, your images never leave your device, because all the calculations are done in you browser! Only some general networking data is processed to make this website work (like all websites).\r\n                </Typography>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <ExpansionPanel>\r\n                <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel3a-content\"\r\n                id=\"panel3a-header\"\r\n                >\r\n                <Typography className={classes.heading}>Credits</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <Container>\r\n                        <Typography variant=\"body2\">\r\n                            Machine learning idea and significant portion of ML implementation came from the excelent <Link to=\"https://course.fast.ai/\">fast.ai course</Link>\r\n                            The webpage template is the excelent work of <Link to=\"https://github.com/davidpfahler/react-ml-app/\">David Pflahler</Link>\r\n                        </Typography>\r\n                    </Container>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </Container>\r\n  </div>;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}